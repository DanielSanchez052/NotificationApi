version: '3.9' 
services:
  api:
    image: api
    container_name: api
    restart: always
    env_file: .env
    build: 
      context: .
      dockerfile: ./Dockerfile
    command: ["sh", "-c", "pip install debugpy -t /tmp && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000"]
    volumes:
      - .:/code
    ports:
      - 8000:8000
      - 5678:5678
    networks:
      - web_network
    depends_on:
      - redis
    
  redis:
    image: "redis:alpine"
    networks: 
      - web_network
  
  celery:
    build: .
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A NotificationApi worker --loglevel=info   
    volumes:
      - .:/code
    environment:
      - DEBUG=1
    networks:
      - web_network
    depends_on:
      - api 
      - redis

  celery-beat:
    build: .
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A NotificationApi beat -l info
    volumes:
      - .:/code
    environment:
      - DEBUG=1
    networks:
      - web_network
    depends_on:
      - api 
      - redis
      
  celery-flower:  
    build: .
    restart: always
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A NotificationApi flower --loglevel=DEBUG --port=8888
    ports:  
      - 8888:8888
    networks:
      - web_network
    depends_on:
      - api   
      - redis

networks:
  web_network:
    driver: bridge

